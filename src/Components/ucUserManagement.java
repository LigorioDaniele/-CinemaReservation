
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Components;
import Client.InsertNewUser;
import Client.MainForm;
import Common.BaseItems;
import Common.BaseItems.UserItem;
import XML.BaseXMLCommand;
import XML.Command;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingbinding.SwingBindings;

/**
 *
 * @author Daniele Ligorio
 */
public class ucUserManagement extends javax.swing.JPanel {
    /**
     * Creates new form ucUserManagement
     */
    MainForm _mainWindow;
    ArrayList<UserItem> userArray;
    JTableBinding tb;
    public ucUserManagement(MainForm mainWindow) {
        this._mainWindow = mainWindow;
        userArray = new ArrayList<UserItem>();
        initComponents();
        MainGrid_Rebind();
    }
    
    public ArrayList<UserItem> getUsers() { 
        return userArray; 
    } 

    public void MainGrid_Rebind(){
        userArray.clear();
        BaseXMLCommand<String, String, ArrayList<UserItem>> command = new BaseXMLCommand<>("GetUserItemList",  null, null);
        _mainWindow._runClient.sendQuery(Command.Encoder(command));
        BaseXMLCommand<String, String, ArrayList<UserItem>> response = Command.Decoder(_mainWindow._runClient.getResponse());
        userArray = (ArrayList<UserItem>)response.getValue(); 
        // create the binding from List to JTable
        tb = SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, userArray, jTable2);
        
        // define the properties to be used for the columns
        BeanProperty username = BeanProperty.create("username");
        BeanProperty password = BeanProperty.create("password");
        BeanProperty isAdmin = BeanProperty.create("isAdmin");
        
        // configure how the properties map to columns
        tb.addColumnBinding(username).setColumnName("Username").setEditable(false);
        tb.addColumnBinding(password).setColumnName("Password").setEditable(false);
        tb.addColumnBinding(isAdmin).setColumnClass(boolean.class).setColumnName("Admin").setEditable(false);
        // realize the binding
        tb.bind();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        chkIsAdmin = new javax.swing.JCheckBox();
        btnSave = new javax.swing.JButton();
        txtPassword = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        btnNewUser = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnDeleteUser = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Password", "Admin"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable2);
        jTable2.getColumnModel().getColumn(0).setResizable(false);
        jTable2.getColumnModel().getColumn(1).setResizable(false);
        jTable2.getColumnModel().getColumn(2).setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Modifica dati utente:");

        jLabel2.setText("Username:");

        jLabel3.setText("Password:");

        chkIsAdmin.setText("Amministratore");

        btnSave.setText("Modifica");
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });

        btnNewUser.setText("Nuovo utente");
        btnNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewUserActionPerformed(evt);
            }
        });

        btnDeleteUser.setText("Elimina");
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chkIsAdmin)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSave)
                        .addGap(29, 29, 29)
                        .addComponent(btnDeleteUser))
                    .addComponent(btnNewUser)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkIsAdmin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave)
                            .addComponent(btnDeleteUser))
                        .addGap(30, 30, 30)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNewUser)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        UserItem currentUserItem = new UserItem(txtUsername.getText(), txtPassword.getText(),chkIsAdmin.isSelected());
        BaseXMLCommand<String, String, UserItem> command = new BaseXMLCommand<>("UpdateUserByUsername",  null, currentUserItem);
        _mainWindow._runClient.sendQuery(Command.Encoder(command));
        BaseXMLCommand<String, String, String> response = Command.Decoder(_mainWindow._runClient.getResponse());
        if(response.getValue().toString().equals("true")){
            txtUsername.setText("");
            txtPassword.setText("");
            chkIsAdmin.setSelected(false);
        }
        MainGrid_Rebind();
    }//GEN-LAST:event_btnSaveMouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        Object selectedUsername = jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 0);
        txtUsername.setText(selectedUsername.toString());
        Object selectedPassword = jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 1);
        txtPassword.setText(selectedPassword.toString());
        Object selectedIsAdmin = jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 2);
        chkIsAdmin.setSelected((boolean)selectedIsAdmin);
        
    }//GEN-LAST:event_jTable2MouseClicked

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        Object selectedUsername = jTable2.getModel().getValueAt(jTable2.getSelectedRow(), 0);
        if(JOptionPane.showConfirmDialog(this,
                                            "Sei sicuro di voler eliminare l'utente " + selectedUsername.toString() + "?",
                                            "Registrazione utente",
                                            JOptionPane.INFORMATION_MESSAGE) == 0) {
            
            UserItem currentUserItem = new UserItem(txtUsername.getText(), txtPassword.getText(),chkIsAdmin.isSelected());
            BaseXMLCommand<String, String, UserItem> command = new BaseXMLCommand<>("DeleteUserByUsername",  null, currentUserItem);
            _mainWindow._runClient.sendQuery(Command.Encoder(command));
            BaseXMLCommand<String, String, String> response = Command.Decoder(_mainWindow._runClient.getResponse());
            if(response.getValue().toString().equals("true")){
                txtUsername.setText("");
                txtPassword.setText("");
                chkIsAdmin.setSelected(false);
            }
            MainGrid_Rebind();
        }
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void btnNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewUserActionPerformed
        InsertNewUser i = new InsertNewUser(this, _mainWindow._runClient);
    }//GEN-LAST:event_btnNewUserActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnNewUser;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox chkIsAdmin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JTable jTable2;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
