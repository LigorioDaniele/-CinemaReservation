/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Controls;

import Client.MainForm;
import Common.BaseItems;
import Common.BaseItems.PalimpsestItemList;
import XML.BaseXMLCommand;
import XML.Command;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.ButtonModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Este
 */
public class c_Palimpsest extends javax.swing.JPanel {
    /**
     * Creates new form c_Palinsest
     */
    int _currentSelectedFilmId = 0;
    String _dayName;
    int _day;
    MainForm _mainWindow;
    public c_Palimpsest() {
        initComponents();
        buttonGroup111.add(jRadioButton1);
        buttonGroup111.add(jRadioButton2);
        buttonGroup111.add(jRadioButton3);
    }
    public void init(MainForm mainWindow, String dayName, int day){
        _mainWindow = mainWindow;
        this._dayName = dayName;
        this._day = day;
        chkDay.setText(dayName);
    }
    public void resetPalimpsest(){
        chkDay.setSelected(false);
        buttonGroup111.clearSelection();
        listHall.clearSelection();
    }
    public void setPalimpsest(int currentSelectedFilmId, ArrayList<BaseItems.PalimpsestItemList> palimpsestItemList) {
        _currentSelectedFilmId = currentSelectedFilmId;
        resetPalimpsest();
        Iterator it = palimpsestItemList.iterator();
        while(it.hasNext()){
            PalimpsestItemList currentPalimpsestItem =  (PalimpsestItemList)it.next();
            if(currentPalimpsestItem.getDay() == _day){
                chkDay.setSelected(true);
                switch(currentPalimpsestItem.getTime()) {
                    case 0:
                        jRadioButton1.setSelected(true);
                        break;
                    case 1:
                        jRadioButton2.setSelected(true);
                        break;
                    case 2:
                        jRadioButton3.setSelected(true);
                        break;
                        
                }
                listHall.setSelectedIndex(currentPalimpsestItem.getHall_id() - 1);
                break;
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        try {
            buttonGroup111 =(javax.swing.ButtonGroup)java.beans.Beans.instantiate(getClass().getClassLoader(), "Controls.c_Palinsest_buttonGroup1");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (java.io.IOException e) {
            e.printStackTrace();
        }
        chkDay = new javax.swing.JCheckBox();
        jRadioButton1 = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listHall = new javax.swing.JList();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();

        chkDay.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chkDay.setText("Domenica");
        chkDay.setActionCommand("");

        jRadioButton1.setText("18-20");

        jRadioButton2.setText("20-22");

        jRadioButton3.setText("22-24");

        listHall.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "1", "2", "3" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listHall);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Sala:");

        btnSave.setText("Salva");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(chkDay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jRadioButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jRadioButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                    .addComponent(jRadioButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING))))
                        .addGap(0, 7, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkDay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        //
        if(chkDay.isSelected()){
            try {
                PalimpsestItemList currentPalimpsestItemList = new PalimpsestItemList();
                currentPalimpsestItemList.setDay(_day);
                currentPalimpsestItemList.setFilm_id(_currentSelectedFilmId);
                int selectedTime = 0;
                if(jRadioButton1.isSelected())
                    selectedTime = 0;
                else if(jRadioButton2.isSelected())
                    selectedTime = 1;
                else if(jRadioButton3.isSelected())
                    selectedTime = 2;

                currentPalimpsestItemList.setTime(selectedTime);
                currentPalimpsestItemList.setHall_id(Integer.parseInt(listHall.getSelectedValue().toString()));

                BaseXMLCommand<String, String, PalimpsestItemList> command = new BaseXMLCommand<>("SetPalimpsest",  null, currentPalimpsestItemList);
                _mainWindow._runClient.sendQuery(Command.Encoder(command));
                BaseXMLCommand<String, String, String> response = Command.Decoder(_mainWindow._runClient.getResponse());
                String res = response.getValue().toString();
                if(res.equals("true")){
                    JOptionPane.showMessageDialog(this,
                        "Operazione effettuata con successo",
                        "Modifica palinsesto",
                        JOptionPane.INFORMATION_MESSAGE);
                }
            }
            catch(Exception e){ }
        }
        else {
            PalimpsestItemList currentPalimpsestItemList = new PalimpsestItemList();
            currentPalimpsestItemList.setDay(_day);
            currentPalimpsestItemList.setFilm_id(_currentSelectedFilmId);
            BaseXMLCommand<String, String, PalimpsestItemList> command = new BaseXMLCommand<>("DeletePalimpsest",  null, currentPalimpsestItemList);
            _mainWindow._runClient.sendQuery(Command.Encoder(command));
            BaseXMLCommand<String, String, String> response = Command.Decoder(_mainWindow._runClient.getResponse());
            String res = response.getValue().toString();
            if(res.equals("true")){
                JOptionPane.showMessageDialog(this,
                    "Operazione effettuata con successo",
                    "Modifica palinsesto",
                    JOptionPane.INFORMATION_MESSAGE);
                resetPalimpsest();
            }
        }
        
    }//GEN-LAST:event_btnSaveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup111;
    private javax.swing.JCheckBox chkDay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JList listHall;
    // End of variables declaration//GEN-END:variables
}
